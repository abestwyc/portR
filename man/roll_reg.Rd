% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/trick_roll_reg.R
\name{roll_reg}
\alias{roll_reg}
\title{Group-rolling Regression}
\usage{
roll_reg(DT, Y, Xs, Group, Width, MinObs, FUN, ...)
}
\arguments{
\item{DT}{A data.table or data.frame.}

\item{Y}{Single character, the name of dependent / explained variable.}

\item{Xs}{Character vector, the name of independent / explanatory variable and control variables.}

\item{Group}{Single Character, specify the rolling-group variable (usually a time variable like
year, month, week, etc).}

\item{Width}{Positive integer, the rolling calculation window length.}

\item{MinObs}{Positive integer, with minimum number of observation that are required in a window.}

\item{FUN}{The function to be applied to the object \code{lm.fit}, this function can only
return a single value. Please note that the name of \code{FUN} cannot be the
same as the variable name in the data!!!}

\item{...}{Additional parameters of the FUN function.}
}
\value{
A numeric vector of the same length as the input.
}
\description{
A function for running group-rolling regression and apply function to the
\code{\link[stats]{lm.fit}} result.
}
\details{
We use \code{stats::lm.fit} to run OLS regression, which returns a \strong{list}
with components (e.g. coefficients, residuals). So the \code{FUN} parameter can
be very flexible.
}
\examples{
# Flexible functions
rsd <- function(x, ...) sd(residuals(x), ...)

# Main variables in DT cannot contains NAs
data(stock)
stock1 <- dropnas(stock, c("return", "size", "explain"))

# Usually, we run this rolling function in a data.table
stock1[, rsd1 := roll_reg(DT = .SD,
                          Y = "return",
                          Xs = c("size", "explain"),
                          Group = "year",
                          Width = 5,
                          MinObs = 45,
                          FUN = rsd), by = stkcd]

}
\seealso{
\code{\link{roll_f1}}, the same group-rolling window;

\code{\link[stats]{lm.fit}} see how to use the regression result to create FUN.
}
